import re
import g4f
from g4f import Client
import asyncio
import os

from function.convert_docx import convert_docx_to_text
from function.convert_pdf import convert_pdf_to_text
from function.convert_xml import convert_xml_to_text


async def split_text(text, max_len=50):
    chunks = []
    start = 0
    while start < len(text):
        end = start + max_len
        chunks.append(text[start:end])
        start = end
    return chunks


async def request_short_description(file_name: str, level_size: int, level_question: int) -> list:
    client = Client()
    text = f"Размерность текста: {level_size}\nУглублённость вопросов: {level_question}\nТекст: "
    summaries = []

    _, file_extension = os.path.splitext(file_name)
    if file_extension.lower() in [".docx", ".doc", '.odt']:
        text += await convert_docx_to_text(file_name)

    elif file_extension.lower() in [".pdf"]:
        text += await convert_pdf_to_text(file_name)

    elif file_extension.lower() in [".xls", ".xlsx", ".xlsm", ".ods", ".csv"]:
        text += await convert_xml_to_text(file_name)
    else:
        print("Поддерживаемые форматы файлов: .docx и .pdf")
        return []

    async def process_chunk(text):
        while True:
            try:
                system_promt = """
                                Цель:
                                Создание полного и последовательного анализа выбранного текста с 
                                использованием трёх уровней глубины.
                                Входные данные:
                                Текст
                                
                                Объем текста:
                                    Первый уровень: 2000 ±100 символов.
                                    Второй уровень: 4000 ±200 символов.
                                    Третий уровень: 6000 ±300 символов.
                                Структура анализа:
                                    Заранее определи тип текста.
                                    Три уровня глубины анализа (фактура → интерпретация → философия и критика).
                                
                                Порядок действий:
                                Если тип текста 
                                явно научный или для обучения по техническим вещам(Математика, Физика, Информатика и т.д)
                                , то пользуйся этими действиями: 
                                
                                1. Подготовка:
                                    Определение, что этот документ должен пояснить
                                    Задачи решаемые в материале и примеры, где можно применить в жизни
                                
                                2. Объяснение материала
                                    Решение задач из файлов
                                    Вывод некой важной вещи или вещей для счёта(Формул, теорем, аксиом и т.д) из файла с объяснением
                                    
                                3. Закрепление
                                    Вопросы по тексту
                                    Задачи по теме текста
                                
                                Итоговый документ:
                                    
                                    Ясное изложение ключевой информации.
                                    Последовательный анализ на заданных уровнях.
                                    Четкие выводы для объяснения информации.
                                    Чёткие вопросы для проверки и ответов на них
                                
                                Дополнительные рекомендации:
                                
                                    Обязательно подкрепляйте выводы цитатами из текста.
                                    Обращайте внимание на темы, узнайте по этому для какой аудитории скорее всего этот текст.
                                    Обращайте внимание на символику, используемую автором.
                                    Формируйте собственные выводы, избегая шаблонных утверждений.
                                    Избегайте разметок HTML и Markdown.
                                
                                Eсли тип текста явно есстественно-научный(География, Биология, Обществознание и т.д) :
                                
                                1. Подготовка:
                                    Темы которые стоит повторить
                                    Вопросы подводящие к данной теме
                                
                                2. Объяснение материала
                                    Объяснение тем и подтем
                                    Описание ситуаций, если они есть
                                    Дополнительные ситуации
                                
                                3. Закрепление
                                    Вопросы по тексту
                                    Задачи на подумать
                                    Задачи на каждые подтемы и тесы                                    
                                
                                Итоговый документ:
                                    
                                    Ясное изложение ключевой информации.
                                    Последовательный анализ на заданных уровнях.
                                    Четкие выводы для объяснения информации.
                                    Чёткие вопросы для проверки и ответов на них
                                
                                Дополнительные рекомендации:
                                
                                    Обязательно подкрепляйте выводы цитатами из текста.
                                    Обращайте внимание на темы, узнайте по этому для какой аудитории скорее всего этот текст.
                                    Обращайте внимание на символику, используемую автором.
                                    Формируйте собственные выводы, избегая шаблонных утверждений.
                                    Избегайте разметок HTML и Markdown.
                                
                                
                                Если тип текста явно художественный:
                                1. Общая характеристика:
                                
                                    Определение жанра произведения.
                                    Назначение периода написания.
                                    Краткое описание культурного и исторического контекста создания произведения.
                                
                                2. Сюжет и композиция:
                                
                                    Общие линии сюжета.
                                    Композиционная структура (экспозиция, завязка, развитие действия, кульминация, развязка).
                                    Важнейшие эпизоды и их взаимосвязь с общей темой.
                                
                                3. Система персонажей:
                                
                                    Основные действующие лица и их роли.
                                    Второстепенные персонажи и их функциональная нагрузка.
                                    Взаимодействие персонажей и конфликты между ними.
                                
                                4. Идея и проблематика:
                                
                                    Основная тема произведения.
                                    Проблемы, поднимаемые автором (социальные, этические, эстетические).
                                    Средства художественной выразительности (символы, аллюзии, приемы стиля).
                                
                                5. Художественные средства и стиль:
                                
                                    Язык и стиль автора.
                                    Использованные художественные приемы (описания, диалоги, пейзажи, портреты).
                                    Атмосфера произведения и способы её создания.
                                
                                6. Критический анализ:
                                
                                    Историческая ценность произведения.
                                    Место произведения в творчестве автора и литературе в целом.
                                    Актуальность идей и тематики произведения для современности.
                                
                                Итоговый документ:
                                
                                    Ясное изложение ключевой информации о произведении.
                                    Последовательный анализ на заданных уровнях.
                                    Четкие выводы о значимости и влиянии произведения.
                                    Чёткие вопросы для проверки и ответы на них
                                
                                Дополнительные рекомендации:
                                
                                    Обязательно подкрепляйте выводы цитатами из текста.
                                    При анализе персонажей выделяйте динамику их внутреннего мира.
                                    Обращайте внимание на символику, используемую автором.
                                    Формируйте собственные выводы, избегая шаблонных утверждений.
                                    Избегайте разметок HTML и Markdown."""

                response_generator = client.chat.completions.create(
                    model="gpt-4o-mini",
                    messages=[
                        {"role": "system", "content": system_promt},
                        {"role": "user", "content": text}
                    ],
                    provider=g4f.Provider.AnyProvider,
                )

                response = ''.join([str(chunk) for chunk in response_generator])
                match = re.search(r"content='(.*?)'", response)
                if match:
                    if match.group(1) == "" or match.group(1) == " " or match.group(1) == "error code: 502":
                        continue

                    return match.group(1)
            except g4f.errors.ResponseError as e:
                print(f"Ошибка: {e}")
                await asyncio.sleep(60)
            except Exception as e:
                print(f"Неизвестная ошибка: {e}")
                await asyncio.sleep(10)

    # for chunk in chunks:
    summary = await process_chunk(text)
    if summary:
        summaries.append(summary)

    full_summary = ' '.join(summaries)
    full_summary = full_summary.replace("\\n", "\n")
    full_summary = full_summary.replace("**", "")

    final_chunks = await split_text(full_summary, max_len=4096)
    return final_chunks
